--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v103=v5(v84,v19);v19=nil;return v103;else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=0;local v86;while true do if (v85==(0 -0)) then v86=(v31/((5 -3)^(v32-(1 -0))))%((4 -2)^(((v33-1) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v86-(v86%(569 -(367 + (1266 -(68 + 997))))) ;end end else local v87=(2197 -(226 + 1044)) -((304 -90) + 713) ;local v88;while true do if (v87==((117 -(32 + 85)) + 0)) then v88=(1 + 1)^(v32-(878 -(282 + 595))) ;return (((v31%(v88 + v88))>=v88) and (1638 -(1523 + 114))) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 1 + 1 ;return (v36 * (1213 -(892 + 65))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (7 -4) );v18=v18 + (6 -2) ;return (v40 * ((30800296 -(67 + 113)) -14022900)) + (v39 * (65886 -(87 + 263))) + (v38 * 256) + v37 ;end local function v24() local v41=0 + 0 ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==2) then v46=v20(v43,51 -30 ,23 + 8 );v47=((v20(v43,32)==(3 -2)) and  -((409 + 544) -((1418 -616) + 150))) or 1 ;v41=7 -4 ;end if (v41==(5 -2)) then if (v46==(0 + 0)) then if (v45==0) then return v47 * (997 -(915 + 82)) ;else v46=2 -1 ;v44=0 + 0 ;end elseif (v46==((3129 -(145 + 293)) -644)) then return ((v45==(1187 -(1069 + 118))) and (v47 * ((2 -1)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(178 + (1275 -(44 + 386))) ) * (v44 + (v45/(2^(92 -40)))) ;end if (v41==(1487 -(998 + 488))) then v44=1 + 0 ;v45=(v20(v43,792 -(368 + 423) ,62 -42 ) * (2^(50 -(10 + 3 + 5)))) + v42 ;v41=7 -5 ;end if ((442 -(341 + 75 + 26))==v41) then v42=v23();v43=v23();v41=3 -2 ;end end end local function v25(v48) local v49;if  not v48 then local v89=772 -(201 + (2084 -1513)) ;while true do if (((4041 -2903) -(116 + 1022))==v89) then v48=v23();if (v48==0) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(4 -3) );v18=v18 + v48 ;local v50={};for v65=1 + 0 , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0;end)();while true do if (v67~=(0 -0)) then else if (v51==(1003 -(451 + 549))) then for v104= #"|",v23() do local v105=(function() return v21();end)();if (v20(v105, #"\\", #"\\")==(0 + 0)) then local v107=(function() return 0 -0 ;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if (v107==(1902 -(106 + 1794))) then while true do if (v108== #"!") then local v125=(function() return 0 + 0 ;end)();local v126=(function() return;end)();while true do if (v125==(0 + 0)) then v126=(function() return 0 -0 ;end)();while true do if ((0 -0)==v126) then v111=(function() return {v22(),v22(),nil,nil};end)();if (v109==0) then local v971=(function() return 0 + 0 ;end)();local v972=(function() return;end)();while true do if (v971==(114 -(4 + 110))) then v972=(function() return 0 -0 ;end)();while true do if (v972~=0) then else v111[ #"asd"]=(function() return v22();end)();v111[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v109== #"~") then v111[ #"asd"]=(function() return v23();end)();elseif (v109==2) then v111[ #"xnx"]=(function() return v23() -(2^(600 -(57 + 527))) ;end)();elseif (v109== #"-19") then local v996=(function() return 1427 -(41 + 1386) ;end)();local v997=(function() return;end)();while true do if ((341 -(218 + 123))==v996) then v997=(function() return 0;end)();while true do if (v997==(1581 -(1535 + 46))) then v111[ #"asd"]=(function() return v23() -(2^(16 + 0)) ;end)();v111[ #"asd1"]=(function() return v22();end)();break;end end break;end end end v126=(function() return 1;end)();end if ((1 + 0)~=v126) then else v108=(function() return 3 -1 ;end)();break;end end break;end end end if (v108== #"xxx") then if (v20(v110, #"91(", #"19(")== #"<") then v111[ #"xnxx"]=(function() return v58[v111[ #"0313"]];end)();end v53[v104]=(function() return v111;end)();break;end if ((560 -(306 + 254))==v108) then local v128=(function() return 0 -0 ;end)();local v129=(function() return;end)();while true do if (v128~=(0 + 0)) then else v129=(function() return 0 -0 ;end)();while true do if ((0 -0)==v129) then v109=(function() return v20(v105,1469 -(899 + 568) , #"19(");end)();v110=(function() return v20(v105, #"0836",4 + 2 );end)();v129=(function() return 3 -2 ;end)();end if (v129==1) then v108=(function() return  #"}";end)();break;end end break;end end end if (v108==(4 -2)) then local v130=(function() return 0;end)();local v131=(function() return;end)();while true do if (v130==(603 -(268 + 335))) then v131=(function() return 0 + 0 ;end)();while true do if (v131~=(1 -0)) then else v108=(function() return  #"nil";end)();break;end if ((290 -(60 + 230))~=v131) then else if (v20(v110, #",", #"\\")== #"{") then v111[67 -(30 + 35) ]=(function() return v58[v111[574 -(426 + 146) ]];end)();end if (v20(v110,2,2 + 0 )== #"]") then v111[ #"xxx"]=(function() return v58[v111[ #"xnx"]];end)();end v131=(function() return 1;end)();end end break;end end end end break;end if (v107~=1) then else local v118=(function() return 0 + 0 ;end)();while true do if (v118==(1457 -(282 + 1174))) then v107=(function() return 813 -(569 + 242) ;end)();break;end if (v118~=(0 -0)) then else v110=(function() return nil;end)();v111=(function() return nil;end)();v118=(function() return 1213 -(323 + 889) ;end)();end end end if (v107==0) then local v119=(function() return 0 -0 ;end)();while true do if (v119==(2 -1)) then v107=(function() return 1 + 0 ;end)();break;end if (v119~=(320 -(53 + 267))) then else v108=(function() return 0 + 0 ;end)();v109=(function() return nil;end)();v119=(function() return 1025 -(706 + 318) ;end)();end end end end end end for v106= #"}",v23() do v54,v106,v28=(function() return v52(v54,v106,v28);end)();end return v56;end if (v51~=(1251 -(721 + 530))) then else local v98=(function() return 413 -(15 + 398) ;end)();local v99=(function() return;end)();while true do if (v98~=0) then else v99=(function() return 0;end)();while true do if (v99~=0) then else v52=(function() return function(v120,v121,v122) local v123=(function() return 1271 -(945 + 326) ;end)();local v124=(function() return;end)();while true do if (v123==(0 -0)) then v124=(function() return 982 -(18 + 964) ;end)();while true do if (v124~=(0 + 0)) then else local v674=(function() return 0;end)();while true do if ((0 -0)==v674) then local v975=(function() return 700 -(271 + 429) ;end)();while true do if ((0 + 0)==v975) then v120[v121-#"~" ]=(function() return v122();end)();return v120,v121,v122;end end end end end end break;end end end;end)();v53=(function() return {};end)();v99=(function() return 1 + 0 ;end)();end if (v99==1) then v54=(function() return {};end)();v51=(function() return 1501 -(1408 + 92) ;end)();break;end end break;end end end v67=(function() return 1087 -(461 + 625) ;end)();end if (v67==(1289 -(993 + 295))) then if (v51~=(127 -(116 + 10))) then else local v100=(function() return 0 + 0 ;end)();local v101=(function() return;end)();while true do if (v100~=(0 + 0)) then else v101=(function() return 1171 -(418 + 753) ;end)();while true do if (v101==(0 + 0)) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v101=(function() return 1 + 0 ;end)();end if (1~=v101) then else v57=(function() return v23();end)();v51=(function() return 1 + 1 ;end)();break;end end break;end end end if (v51~=(1 + 1)) then else local v102=(function() return 0;end)();while true do if (v102~=(0 + 0)) then else v58=(function() return {};end)();for v113= #"!",v57 do local v114=(function() return 0;end)();local v115=(function() return;end)();local v116=(function() return;end)();local v117=(function() return;end)();while true do if (v114==(529 -(406 + 123))) then v115=(function() return 1769 -(1749 + 20) ;end)();v116=(function() return nil;end)();v114=(function() return 1 + 0 ;end)();end if (v114==(1323 -(1249 + 73))) then v117=(function() return nil;end)();while true do if (v115~=1) then else if (v116== #"[") then v117=(function() return v21()~=(0 + 0) ;end)();elseif (v116==(1147 -(466 + 679))) then v117=(function() return v24();end)();elseif (v116== #"91(") then v117=(function() return v25();end)();end v58[v113]=(function() return v117;end)();break;end if (v115==(0 -0)) then local v133=(function() return 1551 -(1126 + 425) ;end)();local v134=(function() return;end)();while true do if ((405 -(118 + 287))~=v133) then else v134=(function() return 0 -0 ;end)();while true do if (v134~=(2 -1)) then else v115=(function() return 1;end)();break;end if (v134~=0) then else v116=(function() return v21();end)();v117=(function() return nil;end)();v134=(function() return 1122 -(118 + 1003) ;end)();end end break;end end end end break;end end end v102=(function() return 2 -1 ;end)();end if (v102==(2 -1)) then v56[ #"xxx"]=(function() return v21();end)();v51=(function() return 380 -(142 + 235) ;end)();break;end end end break;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[9 -7 ];local v64=v59[1 + 2 ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=978 -(553 + 424) ;local v73= -((1205 -(7 + 1197)) -0);local v74={};local v75={...};local v76=v12("#",...) -(1 + 0) ;local v77={};local v78={};for v90=0 + 0 ,v76 do if (v90>=v70) then v74[v90-v70 ]=v75[v90 + 1 ];else v78[v90]=v75[v90 + 1 + 0 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v91=0;while true do if ((3622<4287) and ((1 + 0 + 0)==v91)) then if (v81<=((27 + 48) -40)) then if ((34<=2569) and (v81<=17)) then if ((v81<=(22 -14)) or (2876==1323)) then if (v81<=3) then if (v81<=(2 -1)) then if (v81==(0 + 0)) then v78[v80[9 -7 ]]=v78[v80[756 -((558 -(27 + 292)) + 514) ]][v80[2 + 2 ]];v72=v72 + (1330 -(797 + 532)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[8 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1205 -(373 + 829) ]][v80[4]];v72=v72 + (732 -(476 + 255)) ;v80=v68[v72];v78[v80[1132 -(369 + 761) ]]=v78[v80[2 + 1 ]][v80[4]];v72=v72 + (1 -0) ;v80=v68[v72];if (v78[v80[3 -1 ]]==v78[v80[242 -(64 + 174) ]]) then v72=v72 + 1 + 0 ;else v72=v80[(3 -0) -0 ];end else local v145=v80[338 -(144 + 192) ];local v146=v78[v145];local v147=v80[3];for v425=1,v147 do v146[v425]=v78[v145 + v425 ];end end elseif (v81==2) then local v148=216 -(42 + 174) ;local v149;local v150;local v151;local v152;while true do if (v148==(4 + 0)) then v80=v68[v72];v78[v80[2 + 0 ]]=v80[2 + 1 ];v72=v72 + (1505 -(363 + (4785 -3644))) ;v148=1585 -(1183 + 397) ;end if (v148==(18 -12)) then v149=0 + 0 ;for v895=v152,v80[3 + 1 ] do local v896=1975 -(1913 + 62) ;while true do if (v896==0) then v149=v149 + 1 + 0 ;v78[v895]=v150[v149];break;end end end v72=v72 + ((3 -1) -1) ;v148=1940 -(565 + 1368) ;end if (v148==3) then v78[v152 + (3 -2) ]=v151;v78[v152]=v151[v80[(3171 -1506) -(1477 + 184) ]];v72=v72 + 1 ;v148=5 -1 ;end if (v148==(0 + 0)) then v149=nil;v150=nil;v151=nil;v148=1;end if (v148==(861 -(564 + 292))) then v80=v68[v72];v152=v80[2 -0 ];v150={v78[v152](v13(v78,v152 + (2 -1) ,v80[307 -(244 + 60) ]))};v148=5 + 1 ;end if (v148==(483 -(41 + (574 -(43 + 96))))) then v80=v68[v72];v72=v80[3];break;end if (v148==2) then v80=v68[v72];v152=v80[1003 -(938 + 63) ];v151=v78[v80[3 + (0 -0) ]];v148=1128 -(936 + 189) ;end if (v148==((1 -0) + 0)) then v152=nil;v78[v80[1615 -(1565 + 40 + 8) ]]=v78[v80[2 + 1 ]];v72=v72 + (1139 -(782 + 356)) ;v148=2;end end else local v153=v80[269 -(176 + 91) ];v78[v153](v13(v78,v153 + ((1 + 1) -1) ,v80[3]));end elseif ((2030==2030) and (v81<=5)) then if (v81>(5 -1)) then v60[v80[1095 -(975 + 117) ]]=v78[v80[1877 -(157 + 1718) ]];else local v156=0;local v157;while true do if ((v156==((3 -1) + 0)) or (2040==682)) then v80=v68[v72];v157=v80[2];v78[v157](v13(v78,v157 + 1 + 0 ,v80[3]));v156=10 -7 ;end if (1==v156) then v80=v68[v72];v78[v80[2]]=v78[v80[10 -7 ]];v72=v72 + (1019 -(697 + 321)) ;v156=5 -3 ;end if (v156==(10 -5)) then v72=v72 + ((3 -1) -(1 + 0)) ;v80=v68[v72];v72=v80[2 + 1 ];break;end if ((5 -2)==v156) then v72=v72 + (2 -1) ;v80=v68[v72];for v897=v80[1229 -(322 + 905) ],v80[614 -(602 + 1 + 8) ] do v78[v897]=nil;end v156=1193 -(449 + 740) ;end if (v156==(872 -((2577 -(1414 + 337)) + 46))) then v157=nil;v78[v80[949 -(245 + 702) ]]=v80[9 -6 ];v72=v72 + 1 + 0 ;v156=1899 -(260 + 1638) ;end if (v156==(444 -(382 + 58))) then v72=v72 + (3 -2) ;v80=v68[v72];do return v78[v80[2 + 0 ]];end v156=5;end end end elseif (v81<=(11 -5)) then local v158;local v159;local v160;v78[v80[5 -3 ]]=v80[3];v72=v72 + (1206 -(902 + 303)) ;v80=v68[v72];v78[v80[3 -1 ]]=v78[v80[6 -3 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1692 -(1121 + 569) ]]=v80[3];v72=v72 + (215 -(22 + 192)) ;v80=v68[v72];v160=v80[686 -(483 + 200) ];v159=v78[v160];for v428=v160 + (1464 -(1404 + (1999 -(1642 + 298)))) ,v80[10 -6 ] do v159=v159   .. v78[v428] ;end v78[v80[5 -3 ]]=v159;v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -(0 -0) ]]=v78[v80[768 -(468 + (881 -584)) ]];v72=v72 + ((186 + 377) -(334 + 228)) ;v80=v68[v72];v78[v80[2]]=v78[v80[3]];v72=v72 + (3 -2) ;v80=v68[v72];v158=v80[4 -2 ];v78[v158](v78[v158 + (1 -0) ]);v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[238 -(141 + 95) ]]=v61[v80[3 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]]=v61[v80[6 -3 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v158=v80[2];v160=v78[v80[3]];v78[v158 + (2 -(1 + 0)) ]=v160;v78[v158]=v160[v80[3 + 1 ]];elseif ((v81==(4 + 3)) or (269>2382)) then do return v78[v80[2]];end else local v455=v80[974 -(357 + 615) ];v78[v455]=v78[v455](v13(v78,v455 + 1 ,v73));end elseif (v81<=(16 -(3 + 1))) then if ((836<4132) and (v81<=((14 -8) + 4))) then if (v81>9) then local v182=v80[165 -(92 + 71) ];do return v13(v78,v182,v73);end else v78[v80[1 + 1 ]]=v78[v80[4 -1 ]];end elseif ((2989>=1063) and (v81==(776 -(574 + 191)))) then local v185=v80[2];local v186=v80[4 + 0 ];local v187=v185 + (4 -(2 + 0)) ;local v188={v78[v185](v78[v185 + (850 -(254 + 595)) ],v78[v187])};for v429=127 -(55 + 71) ,v186 do v78[v187 + v429 ]=v188[v429];end local v189=v188[1 -0 ];if v189 then local v457=1790 -(573 + 1217) ;while true do if (v457==(0 -0)) then v78[v187]=v189;v72=v80[1 + 2 ];break;end end else v72=v72 + (1 -0) ;end else local v190;v78[v80[2]]=v80[3];v72=v72 + (940 -(714 + 225)) ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[3]];v72=v72 + ((1 + 0) -0) ;v80=v68[v72];v190=v80[2];v78[v190](v13(v78,v190 + 1 ,v80[1 + 2 ]));v72=v72 + ((1 + 0) -0) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (807 -(118 + 688)) ;v80=v68[v72];do return v78[v80[50 -(25 + 23) ]];end v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[1889 -(583 + 344 + 959) ];end elseif (v81<=(47 -33)) then if ((2406<=3221) and (v81==13)) then local v198=732 -(16 + 716) ;local v199;while true do if ((0 -0)==v198) then v199=v80[99 -(11 + 86) ];v78[v199]=v78[v199](v78[v199 + (2 -(1302 -(384 + 917))) ]);break;end end else local v200=285 -(175 + 110) ;local v201;while true do if ((3567<4459) and (v200==(0 -0))) then v201=v80[2];do return v13(v78,v201,v201 + v80[(711 -(128 + 569)) -(1554 -(1407 + 136)) ] );end break;end end end elseif ((v81<=((3698 -(687 + 1200)) -(503 + 1293))) or (1860>=2065)) then local v202=0;local v203;local v204;local v205;while true do if (v202==(13 -8)) then v78[v80[2 + 0 ]]=v80[1064 -(810 + 251) ];v72=v72 + 1 + 0 ;v80=v68[v72];v202=2 + 4 ;end if ((v202==6) or (2123>=4894)) then v72=v80[3 + 0 ];break;end if (v202==(537 -(43 + (2200 -(556 + 1154))))) then v78[v80[735 -(711 + 22) ]]=v78[v80[11 -8 ]];v72=v72 + (860 -(240 + 619)) ;v80=v68[v72];v202=5;end if ((0 + 0)==v202) then v203=nil;v204=nil;v205=nil;v202=(3 -2) -0 ;end if ((3619==3619) and (v202==(1 + 2))) then v78[v80[1746 -(1344 + 400) ]]=v78[v80[408 -(255 + 150) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v202=4;end if ((2132<3335) and (1==v202)) then v205=v80[2];v204={v78[v205](v78[v205 + 1 ])};v203=0 -0 ;v202=6 -4 ;end if ((v202==(97 -(9 + 86))) or (4477<=3601)) then for v899=v205,v80[4] do local v900=1739 -(404 + 1335) ;while true do if (v900==0) then v203=v203 + 1 ;v78[v899]=v204[v203];break;end end end v72=v72 + (407 -(183 + 223)) ;v80=v68[v72];v202=3;end end elseif ((v81==(19 -3)) or (3478==589)) then v78[v80[(423 -(275 + 146)) + 0 ]]={};else v78[v80[1 + 0 + 1 ]][v80[340 -(10 + 327) ]]=v78[v80[3 + 1 ]];end elseif (v81<=(364 -(118 + 220))) then if (v81<=21) then if (v81<=(7 + 12)) then if ((1732>=130) and (v81==(467 -(108 + 341)))) then local v206;v78[v80[1 + 1 ]]=v80[(76 -(29 + 35)) -9 ];v72=v72 + ((6621 -5127) -(711 + 782)) ;v80=v68[v72];v78[v80[2]]=v78[v80[5 -2 ]];v72=v72 + (470 -(270 + 199)) ;v80=v68[v72];v206=v80[1 + 1 ];v78[v206](v13(v78,v206 + (1820 -(580 + 1239)) ,v80[8 -5 ]));v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + (4 -3) + 0 ;v80=v68[v72];do return v78[v80[4 -2 ]];end v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[3];elseif (v80[2]==v78[v80[(763 + 408) -(645 + 522) ]]) then v72=v72 + (1791 -(1010 + 780)) ;else v72=v80[(1015 -(53 + 959)) + 0 ];end elseif (v81>(95 -(483 -(312 + 96)))) then local v214;local v215;v78[v80[5 -3 ]]=v61[v80[3]];v72=v72 + 1 ;v80=v68[v72];v215=v80[1838 -(1045 + 791) ];v214=v78[v80[7 -4 ]];v78[v215 + ((1 -0) -0) ]=v214;v78[v215]=v214[v80[509 -(351 + 154) ]];v72=v72 + (1575 -((1566 -(147 + 138)) + 293)) ;v80=v68[v72];v78[v80[2]]=v60[v80[269 -(28 + 238) ]];v72=v72 + ((901 -(813 + 86)) -1) ;v80=v68[v72];v215=v80[1561 -(1381 + 178) ];do return v78[v215](v13(v78,v215 + 1 + 0 ,v80[3 + 0 ]));end v72=v72 + 1 + 0 ;v80=v68[v72];v215=v80[1 + (1 -0) ];do return v13(v78,v215,v73);end v72=v72 + (3 -2) ;v80=v68[v72];do return;end else local v228=v80[2];local v229={v78[v228](v13(v78,v228 + 1 + 0 ,v80[3]))};local v230=470 -(381 + 89) ;for v432=v228,v80[4] do v230=v230 + 1 ;v78[v432]=v229[v230];end end elseif ((v81<=(21 + 2)) or (867>3215)) then if (v81==(15 + 7)) then local v231=0 -0 ;local v232;while true do if ((1156 -(1074 + 82))==v231) then v232=nil;v78[v80[2]]=v80[6 -3 ];v72=v72 + ((2277 -(18 + 474)) -(214 + 1570)) ;v231=1456 -(990 + 465) ;end if (v231==(2 + 2)) then v72=v72 + 1 + 0 ;v80=v68[v72];do return v78[v80[2 + 0 ]];end v231=(7 + 12) -14 ;end if (v231==(1727 -(1668 + 58))) then v80=v68[v72];v78[v80[628 -(512 + (371 -257)) ]]=v78[v80[3]];v72=v72 + (2 -1) ;v231=(1089 -(860 + 226)) -1 ;end if ((665<=4541) and (v231==(10 -7))) then v72=v72 + 1 + (303 -(121 + 182)) ;v80=v68[v72];v78[v80[1 + 1 + 0 ]]={};v231=4 + 0 ;end if (v231==(16 -11)) then v72=v72 + (1995 -(109 + 1885)) ;v80=v68[v72];v72=v80[1472 -(1269 + 200) ];break;end if (v231==(3 -1)) then v80=v68[v72];v232=v80[817 -(98 + 717) ];v78[v232](v13(v78,v232 + ((2067 -(988 + 252)) -(802 + 24)) ,v80[5 -(1 + 1) ]));v231=3 -0 ;end end else v78[v80[1 + 1 ]]=v80[3];end elseif (v81<=(19 + 5)) then local v235=0 + 0 ;local v236;local v237;while true do if (v235==0) then v236=nil;v237=nil;v78[v80[1 + 1 + 0 ]][v80[8 -(1975 -(49 + 1921)) ]]=v78[v80[13 -9 ]];v72=v72 + 1 + 0 ;v235=1 + 0 ;end if (v235==(6 + 1)) then v80=v68[v72];v78[v80[2 + 0 ]]=v60[v80[2 + (891 -(223 + 667)) ]];v72=v72 + (1434 -(797 + 636)) ;v80=v68[v72];v235=38 -30 ;end if ((1089<=3455) and (v235==(1621 -(1427 + 192)))) then v78[v80[1 + 1 ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]]=v60[v80[3 + 0 ]];v235=2 + 1 ;end if (v235==(332 -(192 + (186 -(51 + 1))))) then v72=v72 + (1277 -(316 + 960)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3 + 0 ]]=v78[v80[4 + 0 ]];v72=v72 + (3 -2) ;v235=558 -(83 + 468) ;end if (v235==(1817 -(1202 + 604))) then v80=v68[v72];v78[v80[2]][v80[13 -10 ]]=v78[v80[4]];v72=v72 + 1 ;v80=v68[v72];v235=19 -7 ;end if (v235==(35 -22)) then v72=v80[328 -(45 + 280) ];break;end if (v235==1) then v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v235=1 + 1 ;end if ((v235==(3 + 2)) or (3522<2146)) then v78[v80[2]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[5 -2 ]]=v80[4];v235=1917 -((585 -245) + 1571) ;end if (v235==(4 + 4)) then v237=v80[2];v236=v78[v80[1775 -(1733 + 39) ]];v78[v237 + (2 -1) ]=v236;v78[v237]=v236[v80[1038 -(125 + 909) ]];v235=9;end if (v235==(1952 -(1096 + 852))) then v80=v68[v72];v78[v80[2]][v80[(3 -1) + 1 ]]=v80[5 -1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v235=517 -(409 + 103) ;end if (v235==((1373 -(146 + 979)) -(46 + 190))) then v237=v80[1 + 1 ];v78[v237](v78[v237 + 1 ]);v72=v72 + 1 ;v80=v68[v72];v235=108 -(51 + (649 -(311 + 294))) ;end if ((v235==(3 + (19 -12))) or (3491<=3258)) then v80=v68[v72];v237=v80[1319 -(1114 + 203) ];v78[v237]=v78[v237](v13(v78,v237 + 1 ,v80[729 -(228 + 498) ]));v72=v72 + 1 + 0 ;v235=3 + 4 + 4 ;end if (v235==(666 -(174 + 489))) then v72=v72 + ((1445 -(496 + 947)) -1) ;v80=v68[v72];v78[v80[(3265 -(1233 + 125)) -(830 + 1075) ]][v80[527 -(303 + 90 + 131) ]]=v78[v80[1273 -(231 + 1038) ]];v72=v72 + 1 ;v235=4;end if ((v235==9) or (4449<3644)) then v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[1164 -(171 + 991) ]]=v60[v80[12 -9 ]];v72=v72 + (2 -1) ;v235=24 -14 ;end end elseif (v81==25) then local v462;local v463;local v464;local v465;v78[v80[2 + 0 ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[(2 + 4) -4 ]][v80[8 -5 ]]=v80[4];v72=v72 + ((1646 -(963 + 682)) -0) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1250 -(111 + 1137) ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[160 -(91 + 67) ]][v80[8 -5 ]]=v80[4];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[525 -(423 + 100) ]]=v78[v80[1 + 2 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + (1505 -(504 + 1000)) ;v80=v68[v72];v78[v80[(521 + 252) -(326 + 445) ]]=v78[v80[13 -10 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[6 -3 ];v72=v72 + (712 -(530 + 181)) ;v80=v68[v72];v78[v80[883 -(614 + 26 + 241) ]]=v78[v80[4 -1 ]];v72=v72 + (33 -(19 + 13)) ;v80=v68[v72];v465=v80[4 -1 ];v464=v78[v465];for v770=v465 + (2 -1) ,v80[11 -7 ] do v464=v464   .. v78[v770] ;end v78[v80[2]]=v464;v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]][v80[6 -3 ]]=v78[v80[1816 -(1293 + 519) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[4 -2 ]][v80[5 -2 ]]=v80[4];v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[(4 + 0) -2 ]]=v61[v80[2 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 0 + 1 ]]=v80[3];v72=v72 + (2 -1) ;v80=v68[v72];v463=v80[1 + 1 ];v78[v463]=v78[v463](v78[v463 + 1 + 0 ]);v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1098 -(709 + 387) ]][v80[1861 -(673 + 1185) ]]=v78[v80[11 -7 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2 -(182 -(156 + 26)) ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3 + 0 ]]=v80[4];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[5 -2 ]]=v78[v80[(10 -3) -3 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1882 -(446 + 1434) ]][v80[1286 -(1040 + 243) ]]=v80[11 -7 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1849 -(559 + (1452 -(149 + 15))) ]]={};v72=v72 + (1932 -(609 + 1322)) ;v80=v68[v72];v78[v80[456 -(13 + 441) ]][v80[3]]=v80[14 -10 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[9 -7 ]][v80[(961 -(890 + 70)) + 2 ]]=v78[v80[14 -10 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[(125 -(39 + 78)) -5 ]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]={};v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v80[3 + 1 ];v72=v72 + 1 + (482 -(14 + 468)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3 + (0 -0) ]];v72=v72 + (434 -(153 + (782 -502))) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v465=v80[2 + 0 + 1 + 0 ];v464=v78[v465];for v771=v465 + 1 + 0 ,v80[3 + 1 ] do v464=v464   .. v78[v771] ;end v78[v80[2 -0 ]]=v464;v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[669 -(89 + 578) ]][v80[3 + 0 ]]=v78[v80[8 -4 ]];v72=v72 + ((475 + 575) -(572 + 477)) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[2 + 1 + 0 ]]=v80[1 + 3 ];v72=v72 + (87 -(84 + 2)) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[(1617 -772) -(497 + 345) ]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[1 + 2 ]]=v78[v80[1 + 3 ]];v72=v72 + (1334 -(605 + 728)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[6 -3 ]]=v80[1 + 3 ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2 + 0 ]]={};v72=v72 + ((2 + 0) -1) ;v80=v68[v72];v78[v80[2]][v80[(10 -7) + 0 ]]=v80[493 -(457 + 32) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(36 + 1368) -(832 + 570) ]][v80[3 + 0 ]]=v78[v80[2 + 2 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1 + (52 -(12 + 39)) ]][v80[799 -(588 + 208) ]]=v80[4];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[(1677 + 125) -((2736 -1852) + 916) ]][v80[6 -3 ]]=v80[3 + (3 -2) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[(195 + 461) -(123 + 109 + 421) ]]=v78[v80[1893 -(1569 + 320) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[(22 -13) -(4 + 2) ]]=v80[609 -(316 + 289) ];v72=v72 + (2 -(4 -3)) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(3165 -(1596 + 114)) -(666 + 787) ]][v80[428 -(360 + 65) ]]=v80[4];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[256 -(79 + 175) ]][v80[4 -1 ]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(718 -(164 + 549)) -3 ]][v80[5 -2 ]]=v80[903 -((1941 -(1059 + 379)) + 396) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[183 -(92 + 89) ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[(3 -0) -1 ]][v80[2 + 1 ]]=v80[3 + 1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[7 -5 ]][v80[1 + 2 ]]=v78[v80[8 -4 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[2 + 1 ]]=v80[12 -8 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]][v80[1247 -(485 + 394 + 365) ]]=v80[8 -4 ];v72=v72 + (1190 -(442 + 747)) ;v80=v68[v72];v78[v80[1137 -(832 + 303) ]]=v78[v80[949 -(88 + 858) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v463=v80[2];v78[v463]=v78[v463]();v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[792 -(766 + 23) ]]=v78[v80[19 -15 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[4 -2 ]][v80[10 -7 ]]=v80[1077 -(1036 + 37) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1482 -(109 + 532 + 839) ]][v80[916 -((1302 -(145 + 247)) + 3) ]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]][v80[1687 -(1466 + 179 + 39) ]]=v78[v80[2 + 1 + 1 ]];v72=v72 + (1149 -(556 + 592)) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[811 -(329 + 479) ]]=v80[858 -(174 + 680) ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[742 -(396 + 343) ]]=v80[1 + 3 ];v72=v72 + ((4381 -2903) -(6 + 23 + 1448)) ;v80=v68[v72];v78[v80[2]][v80[3]]=v78[v80[(1200 + 193) -(135 + 1254) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[9 -7 ]][v80[2 + 1 ]]=v80[1531 -(389 + 1138) ];v72=v72 + ((933 -358) -(102 + 472)) ;v80=v68[v72];v78[v80[2 + 0 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(722 -(254 + 466)) + 0 ]][v80[3]]=v80[1549 -(320 + 1225) ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]][v80[3]]=v78[v80[3 + 1 ]];v72=v72 + (1465 -(157 + 1307)) ;v80=v68[v72];v78[v80[2]][v80[3]]=v80[1863 -(821 + 1038) ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[(567 -(544 + 16)) -4 ]]=v80[1030 -(834 + 192) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[1 + 2 ]]=v78[v80[5 -1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[306 -(300 + 4) ]][v80[1 + 2 ]]=v80[10 -(18 -12) ];v72=v72 + 1 ;v80=v68[v72];v463=v80[364 -(112 + 250) ];v462=v78[v463];v465=v80[3];for v772=1,v465 do v462[v772]=v78[v463 + v772 ];end else local v574;local v575;local v576;local v577;v78[v80[1 + 1 ]]=v78[v80[7 -4 ]];v72=v72 + 1 ;v80=v68[v72];v577=v80[2 + 0 ];v576=v78[v80[2 + 1 ]];v78[v577 + 1 + 0 ]=v576;v78[v577]=v576[v80[2 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v577=v80[2];v575={v78[v577](v13(v78,v577 + (2 -1) ,v80[885 -(244 + 638) ]))};v574=0;for v775=v577,v80[697 -(627 + 66) ] do v574=v574 + (2 -1) ;v78[v775]=v575[v574];end v72=v72 + (603 -(512 + 90)) ;v80=v68[v72];v72=v80[1909 -((2293 -(294 + 334)) + (494 -(236 + 17))) ];end elseif (v81<=(747 -(373 + 344))) then if ((v81<=(13 + 15)) or (153>=1887)) then if ((1765>640) and (v81>(8 + 19))) then local v238;local v239;v78[v80[2]]=v61[v80[7 -4 ]];v72=v72 + 1 ;v80=v68[v72];v239=v80[2 -(0 + 0) ];v238=v78[v80[3]];v78[v239 + (1100 -(35 + 1064)) ]=v238;v78[v239]=v238[v80[3 + 0 + 1 ]];v72=v72 + (2 -(3 -2)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v60[v80[1239 -(298 + 938) ]];v72=v72 + (1260 -((1103 -870) + 1026)) ;v80=v68[v72];v239=v80[2];do return v78[v239](v13(v78,v239 + (1667 -(636 + 1030)) ,v80[2 + 1 ]));end v72=v72 + 1 + 0 ;v80=v68[v72];v239=v80[1 + 1 ];do return v13(v78,v239,v73);end v72=v72 + 1 + 0 ;v80=v68[v72];do return;end else local v252=0;local v253;local v254;while true do if ((200<4059) and (v252==(222 -(55 + 166)))) then for v901=v253 + 1 + 0 ,v80[4] do v254=v254   .. v78[v901] ;end v78[v80[1 + 1 ]]=v254;break;end if ((v252==0) or (3210<=1400)) then v253=v80[3];v254=v78[v253];v252=3 -2 ;end end end elseif (v81==(326 -(36 + 261))) then v78[v80[2]]=v78[v80[4 -1 ]][v80[4]];else local v257;local v258;local v259;local v260;v78[v80[2]]=v78[v80[1371 -(34 + 1334) ]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v260=v80[2 + 0 ];v259=v78[v80[1286 -(1035 + 248) ]];v78[v260 + 1 ]=v259;v78[v260]=v259[v80[25 -(20 + 1) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[321 -(134 + 185) ]]=v80[1136 -(549 + 584) ];v72=v72 + (686 -(314 + 371)) ;v80=v68[v72];v260=v80[6 -4 ];v258={v78[v260](v13(v78,v260 + 1 + 0 ,v80[3]))};v257=1172 -(786 + 386) ;for v435=v260,v80[12 -8 ] do v257=v257 + ((59 + 1321) -(1055 + 324)) ;v78[v435]=v258[v257];end v72=v72 + (1341 -(1093 + 247)) ;v80=v68[v72];v72=v80[3 + 0 ];end elseif (v81<=(4 + (59 -31))) then if (v81==31) then v78[v80[7 -5 ]]();else local v273=0 -(0 -0) ;local v274;local v275;while true do if ((1380<3863) and (v273==((1978 -(582 + 1388)) -5))) then v72=v72 + 1 ;v80=v68[v72];v275=v80[4 -2 ];v274=v78[v80[2 + 1 ]];v273=15 -11 ;end if ((183<=3341) and (v273==(3 -2))) then v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[7 -4 ]];v72=v72 + (689 -(364 + 324)) ;v80=v68[v72];v273=2;end if (v273==(0 -0)) then v274=nil;v275=nil;v60[v80[6 -3 ]]=v78[v80[1 + 1 ]];v72=v72 + (4 -3) ;v273=1 -0 ;end if (v273==(18 -(19 -7))) then v78[v275](v13(v78,v275 + 1 ,v80[3]));v72=v72 + (1269 -(1249 + 19)) ;v80=v68[v72];v72=v80[3];break;end if ((v273==(2 + 0)) or (426>3276)) then v78[v80[7 -5 ]]=v78[v80[1089 -(686 + 400) ]][v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[231 -(73 + 156) ]]=v78[v80[1 + 2 ]][v80[815 -(721 + 90) ]];v273=1 + 2 ;end if ((12 -8)==v273) then v78[v275 + (471 -(161 + 63 + 246)) ]=v274;v78[v275]=v274[v80[5 -(365 -(326 + 38)) ]];v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v273=1 + 4 ;end if ((v273==5) or (3592==4092)) then v78[v80[1 + 1 ]]=v80[3 + 0 ];v72=v72 + (1 -0) ;v80=v68[v72];v275=v80[6 -(5 -1) ];v273=6;end end end elseif ((3380==3380) and (v81<=33)) then local v276=0;local v277;local v278;while true do if ((4841>=4597) and (v276==(515 -(203 + 310)))) then v278=v80[1995 -(1238 + 755) ];v277=v78[v80[3]];v78[v278 + 1 + (620 -(47 + 573)) ]=v277;v78[v278]=v277[v80[1538 -(709 + 825) ]];v276=4 -1 ;end if ((3962==3962) and (v276==((2 + 3) -1))) then v80=v68[v72];v278=v80[(3677 -2811) -(196 + (1083 -415)) ];v78[v278](v13(v78,v278 + (3 -(1666 -(1269 + 395))) ,v80[5 -(494 -(76 + 416)) ]));v72=v72 + (834 -(171 + 662)) ;v276=98 -((447 -(319 + 124)) + (203 -114)) ;end if (v276==(20 -14)) then do return v78[v80[1 + 1 ]];end v72=v72 + (4 -3) ;v80=v68[v72];v72=v80[2 + 1 ];break;end if (v276==(1486 -(35 + 1451))) then v277=nil;v278=nil;v78[v80[(2462 -(564 + 443)) -(28 + 1425) ]]=v78[v80[3]][v80[1997 -(941 + 1052) ]];v72=v72 + (2 -1) + (458 -(337 + 121)) ;v276=(4439 -2924) -(822 + 692) ;end if ((v276==(1 -0)) or (3057<=2101)) then v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[300 -(45 + 252) ]][v80[4]];v72=v72 + (3 -2) + 0 ;v80=v68[v72];v276=1 + 1 ;end if ((1916 -(1261 + 650))==v276) then v80=v68[v72];v78[v80[4 -2 ]]=v80[436 -(49 + 65 + 319) ]~=(0 -0) ;v72=v72 + (1 -0) ;v80=v68[v72];v276=6;end if (v276==(2 + 1)) then v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[1966 -(556 + (3224 -(772 + 1045))) ];v72=v72 + (1207 -(741 + 465)) ;v276=469 -(170 + 42 + 253) ;end end elseif (v81==34) then local v590;v60[v80[2 + 1 ]]=v78[v80[2 + 0 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v60[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1233 -(957 + 273) ];v72=v72 + 1 + 0 ;v80=v68[v72];v590=v80[1 + 1 ];v78[v590](v78[v590 + (3 -2) ]);v72=v72 + ((146 -(102 + 42)) -1) ;v80=v68[v72];v78[v80[(1849 -(1524 + 320)) -3 ]]=v80[3];else local v599;v78[v80[9 -7 ]]=v80[3];v72=v72 + (1781 -(389 + 1391)) ;v80=v68[v72];v599=v80[2];v78[v599](v78[v599 + 1 ]);v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[6 -3 ]~=(951 -(783 + 168)) ;v72=v72 + (3 -2) ;v80=v68[v72];do return v78[v80[1272 -(1049 + 221) ]];end v72=v72 + 1 + (156 -(18 + 138)) ;v80=v68[v72];v72=v80[314 -(309 + 2) ];end elseif (v81<=(162 -109)) then if (v81<=((3074 -1818) -(1090 + 122))) then if ((v81<=(13 + 26)) or (3977>=4688)) then if (v81<=37) then if ((v81==(120 -84)) or (774<455)) then local v279=v80[2 + 0 ];do return v78[v279](v13(v78,v279 + (1119 -(628 + 490)) ,v80[1 + 2 ]));end else local v280=v80[4 -2 ];local v281=v78[v80[13 -(1112 -(67 + 1035)) ]];v78[v280 + (775 -(431 + 343)) ]=v281;v78[v280]=v281[v80[7 -3 ]];end elseif (v81==(109 -71)) then local v285;v60[v80[3 + 0 ]]=v78[v80[1 + 1 ]];v72=v72 + ((2044 -(136 + 212)) -(556 + 1139)) ;v80=v68[v72];v78[v80[17 -(6 + 9) ]]=v60[v80[1 + 2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (170 -(28 + 141)) ;v80=v68[v72];v285=v80[2];v78[v285](v78[v285 + 1 + 0 ]);v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3 -0 ];elseif (v78[v80[2]]==v80[3 + 1 ]) then v72=v72 + (1318 -(486 + (3531 -2700))) ;else v72=v80[7 -4 ];end elseif (v81<=41) then if ((v81>(140 -100)) or (832==2347)) then local v295=v80[1 + 1 ];v78[v295](v78[v295 + (3 -2) ]);else v78[v80[1265 -(668 + 595) ]]=v60[v80[3 + 0 + 0 ]];end elseif (v81<=(9 + 33)) then if v78[v80[5 -3 ]] then v72=v72 + (291 -(23 + 267)) ;else v72=v80[1947 -(1129 + 752 + 63) ];end elseif ((v81==43) or (1934==2777)) then v78[v80[389 -((1975 -(240 + 1364)) + 16) ]]=v29(v69[v80[1753 -(1326 + 424) ]],nil,v61);else v78[v80[3 -1 ]][v80[1085 -(1050 + 32) ]]=v80[14 -(35 -25) ];end elseif (v81<=48) then if (v81<=(164 -(88 + 30))) then if (v81==(816 -(720 + 51))) then for v438=v80[2],v80[3] do v78[v438]=nil;end else local v298;local v299;v299=v80[4 -(2 + 0) ];v298=v78[v80[1779 -(421 + 1355) ]];v78[v299 + (1 -(1055 -(331 + 724))) ]=v298;v78[v299]=v298[v80[2 + 2 ]];v72=v72 + (1084 -(286 + 797)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[10 -7 ];v72=v72 + (1 -0) ;v80=v68[v72];v299=v80[441 -(397 + (686 -(269 + 375))) ];v78[v299]=v78[v299](v13(v78,v299 + 1 ,v80[3]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[802 -(24 + 776) ]]=v78[v80[728 -(267 + 458) ]][v80[5 -(1 + 0) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[787 -(222 + 563) ]]=v78[v80[6 -(5 -2) ]][v80[822 -(667 + 151) ]];v72=v72 + (1498 -(1410 + 87)) + 0 ;v80=v68[v72];if  not v78[v80[192 -(23 + 167) ]] then v72=v72 + (1799 -(690 + 1108)) ;else v72=v80[2 + 1 ];end end elseif (v81==47) then local v313=0 + 0 ;local v314;local v315;local v316;while true do if ((v313==((2746 -(1504 + 393)) -(40 + 808))) or (604==4669)) then v316=0;for v902=v314,v80[1 + 3 ] do v316=v316 + 1 ;v78[v902]=v315[v316];end break;end if (((0 -0)==v313) or (2088>2395)) then v314=v80[5 -3 ];v315={v78[v314](v78[v314 + 1 + 0 ])};v313=1 + 0 ;end end else local v317;local v318;v78[v80[573 -(47 + 524) ]]=v78[v80[2 + 1 ]][v80[10 -6 ]];v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1729 -(1165 + 561) ]][v80[1 + 3 ]];v72=v72 + (3 -2) ;v80=v68[v72];v318=v80[1 + 1 ];v317=v78[v80[3]];v78[v318 + (480 -(341 + 138)) ]=v317;v78[v318]=v317[v80[2 + 2 ]];v72=v72 + (1 -(796 -(461 + 335))) ;v80=v68[v72];v78[v80[328 -(12 + 77 + 237) ]]=v80[3];v72=v72 + (3 -2) ;v80=v68[v72];v318=v80[3 -1 ];v78[v318](v13(v78,v318 + (882 -(581 + 300)) ,v80[1223 -(855 + 365) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[(1767 -(1730 + 31)) -3 ]~=(0 + 0) ;v72=v72 + (1236 -(1030 + 205)) ;v80=v68[v72];do return v78[v80[2 + (1667 -(728 + 939)) ]];end v72=v72 + 1 ;v80=v68[v72];v72=v80[3 + 0 ];end elseif ((1992<=2618) and (v81<=50)) then if (v81==49) then local v334=0;local v335;while true do if (v334==(286 -(156 + 130))) then v335=v80[2];v78[v335]=v78[v335]();break;end end else local v336;local v337;v337=v80[4 -(6 -4) ];v78[v337]=v78[v337]();v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[3 -1 ]]=v61[v80[1 + (3 -1) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[71 -(10 + 59) ]]=v78[v80[1 + (4 -2) ]][v80[19 -15 ]];v72=v72 + ((2232 -(138 + 930)) -(671 + 492)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[1218 -(369 + 846) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[1948 -(947 + 89 + 909) ]][v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]]=v80[3];v72=v72 + (204 -(11 + 192)) ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v61[v80[178 -(135 + 40) ]];v72=v72 + (2 -1) ;v80=v68[v72];v337=v80[2 + 0 ];v336=v78[v80[6 -(3 + 0) ]];v78[v337 + 1 ]=v336;v78[v337]=v336[v80[5 -1 ]];v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[2]]=v80[179 -(50 + (1892 -(459 + 1307))) ];v72=v72 + (2 -1) ;v80=v68[v72];v337=v80[1 + 1 ];v78[v337]=v78[v337](v13(v78,v337 + (1414 -(1233 + 180)) ,v80[972 -(522 + 447) ]));end elseif ((v81<=((3342 -(474 + 1396)) -(107 + 1314))) or (3318==418)) then local v359=0 + 0 ;local v360;local v361;while true do if ((2 -1)==v359) then v72=v72 + 1 + 0 ;v80=v68[v72];v361=v80[3 -1 ];v359=7 -5 ;end if (v359==(1917 -(716 + 1194))) then v80=v68[v72];do return;end break;end if (v359==(0 + 0)) then v360=nil;v361=nil;v78[v80[1 + 1 ]]=v61[v80[3]];v359=504 -(74 + 429) ;end if (6==v359) then v361=v80[3 -1 ];do return v13(v78,v361,v73);end v72=v72 + 1 + 0 ;v359=7;end if (v359==(6 -(5 -2))) then v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v60[v80[8 -5 ]];v359=4;end if (((4 -2)==v359) or (4067<=2537)) then v360=v78[v80[436 -(279 + 154) ]];v78[v361 + 1 ]=v360;v78[v361]=v360[v80[(733 + 49) -(2 + 452 + 324) ]];v359=3 + 0 ;end if (v359==(21 -(12 + 5))) then v72=v72 + 1 ;v80=v68[v72];v361=v80[2 + 0 ];v359=12 -7 ;end if (v359==((5 -3) + 3)) then do return v78[v361](v13(v78,v361 + 1 ,v80[1096 -(277 + 816) ]));end v72=v72 + (4 -3) ;v80=v68[v72];v359=1189 -(1058 + 125) ;end end elseif ((v81>(10 + 42)) or (4169<=4060)) then v72=v80[978 -(815 + 160) ];else local v613=0 -0 ;local v614;while true do if ((v613==(0 -0)) or (86>=606)) then v614=v80[1 + 0 + 1 ];v78[v614]=v78[v614](v13(v78,v614 + (2 -1) ,v80[1901 -(41 + 1857) ]));break;end end end elseif (v81<=62) then if (v81<=57) then if (v81<=(1948 -(1222 + 671))) then if ((v81==(139 -85)) or (153>=2453)) then local v362=v80[2];local v363=v78[v362];for v440=v362 + (1 -0) ,v80[1185 -(229 + 953) ] do v7(v363,v78[v440]);end else local v364;v364=v80[2];v78[v364]=v78[v364]();v72=v72 + (1775 -(1111 + 663)) ;v80=v68[v72];v78[v80[6 -4 ]]=v61[v80[1582 -(874 + (3074 -2369)) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[6 -(594 -(562 + 29)) ]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[681 -(642 + 37) ]]=v78[v80[1 + 2 ]][v80[4]];v72=v72 + (1420 -(374 + 1045)) + 0 + 0 ;v80=v68[v72];v364=v80[(12 -8) -2 ];v78[v364]=v78[v364](v78[v364 + (455 -(233 + 221)) ]);v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]][v80[3]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[1544 -(718 + 823) ];end elseif (v81>56) then local v378=0 + 0 ;local v379;local v380;while true do if (v378==(811 -(266 + 539))) then v380=v80[2];do return v13(v78,v380,v73);end v72=v72 + (2 -1) ;v378=1232 -((1274 -(448 + 190)) + 589) ;end if (v378==(2 -1)) then v72=v72 + 1 ;v80=v68[v72];v380=v80[3 -1 ];v378=2 + 0 + 0 ;end if (v378==(2 + 1)) then v72=v72 + (1016 -(657 + 358)) ;v80=v68[v72];v78[v80[4 -2 ]]=v60[v80[6 -(2 + 1) ]];v378=4;end if (v378==2) then v379=v78[v80[1190 -(1151 + 36) ]];v78[v380 + 1 + 0 ]=v379;v78[v380]=v379[v80[2 + 2 ]];v378=8 -5 ;end if (v378==4) then v72=v72 + (1833 -(1552 + 280)) ;v80=v68[v72];v380=v80[836 -(64 + 502 + 268) ];v378=4 + 1 ;end if (v378==7) then v80=v68[v72];do return;end break;end if (v378==(0 -0)) then v379=nil;v380=nil;v78[v80[1 + 1 ]]=v61[v80[3]];v378=1244 -(157 + 1086) ;end if (v378==5) then do return v78[v380](v13(v78,v380 + (1 -0) ,v80[13 -10 ]));end v72=v72 + (1 -0) ;v80=v68[v72];v378=7 -1 ;end end else v78[v80[2]]=v80[11 -8 ]~=0 ;end elseif (v81<=59) then if (v81==(877 -(599 + 220))) then v78[v80[3 -1 ]]=v78[v80[(6009 -4075) -(1813 + 118) ]] -v78[v80[3 + 1 ]] ;else local v383=v80[1219 -(841 + 376) ];local v384,v385=v71(v78[v383](v13(v78,v383 + (1 -0) ,v80[(1495 -(1307 + 187)) + 2 ])));v73=(v385 + v383) -(2 -1) ;local v386=859 -(464 + (1566 -1171)) ;for v441=v383,v73 do v386=v386 + (2 -1) ;v78[v441]=v384[v386];end end elseif (v81<=60) then if  not v78[v80[1 + 1 ]] then v72=v72 + (838 -(467 + 370)) ;else v72=v80[3];end elseif (v81==(125 -(149 -85))) then local v616;local v617;local v618;v618=v80[2 + 0 ];v617={v78[v618](v78[v618 + 1 + 0 ])};v616=0 -0 ;for v858=v618,v80[11 -7 ] do v616=v616 + 1 ;v78[v858]=v617[v616];end v72=v72 + (521 -(150 + 370)) ;v80=v68[v72];v78[v80[1284 -(74 + 1208) ]]=v78[v80[7 -4 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[9 -7 ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[393 -(14 + (1059 -(232 + 451))) ];v72=v72 + (1 -0) ;v80=v68[v72];v72=v80[2 + 1 + 0 ];else v78[v80[2 + 0 + 0 ]]=v61[v80[3]];end elseif (v81<=(64 + 3)) then if (v81<=(187 -(687 -(510 + 54)))) then if (v81==(48 + 15)) then local v387=78 -((46 -23) + (91 -(13 + 23))) ;local v388;while true do if ((9 -5)==v387) then v80=v68[v72];v78[v80[2]]=v78[v80[(5 -2) + (0 -0) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v387=7 -2 ;end if (((1 + 0)==v387) or (2676>=4227)) then v388=v80[903 -(652 + 249) ];v78[v388]=v78[v388](v13(v78,v388 + (2 -1) ,v80[(3399 -1528) -(708 + 1160) ]));v72=v72 + (2 -1) ;v80=v68[v72];v387=(1091 -(830 + 258)) -(3 -2) ;end if (v387==(30 -(10 + 17))) then v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1734 -(1400 + 332) ]]=v78[v80[5 -2 ]][v80[1912 -(242 + 1666) ]];v72=v72 + 1 ;v387=4;end if ((3 + 2)==v387) then v78[v80[1 + 1 ]]=v78[v80[3 + 0 ]];v72=v72 + (941 -(850 + 90)) ;v80=v68[v72];v388=v80[3 -1 ];v387=1396 -(360 + 1030) ;end if ((2 + 0)==v387) then v78[v80[5 -3 ]]=v78[v80[3]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1663 -(909 + 752) ]]=v61[v80[3]];v387=1226 -(109 + 1114) ;end if (v387==0) then v388=nil;v78[v80[(2 + 1) -1 ]]=v80[2 + 1 ];v72=v72 + (243 -(6 + 236)) ;v80=v68[v72];v387=1;end if ((v387==(4 + 2)) or (283>=2823)) then v78[v388](v13(v78,v388 + 1 ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v72=v80[3 + 0 ];break;end end elseif (v78[v80[2]]==v78[v80[8 -4 ]]) then v72=v72 + (1 -0) ;else v72=v80[(967 + 169) -(1076 + 57) ];end elseif (v81<=(11 + 54)) then local v389;local v390;local v391;v391=v80[2];v78[v391]=v78[v391]();v72=v72 + (690 -(579 + 110)) ;v80=v68[v72];v78[v80[(1442 -(860 + 581)) + 1 ]]=v78[v80[3 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(1508 -1099) -(174 + 233) ]]=v61[v80[8 -(4 + 1) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[4 -1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v391=v80[2];v390={v78[v391](v78[v391 + 1 ])};v389=0;for v444=v391,v80[245 -(237 + 4) ] do v389=v389 + (2 -1) ;v78[v444]=v390[v389];end v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[1 + 2 ];elseif (v81>66) then local v631=0 -0 ;local v632;local v633;local v634;while true do if ((4242>366) and (v631==4)) then v72=v72 + 1 + 0 ;v80=v68[v72];v634=v80[(9 -5) -2 ];v78[v634]=v78[v634](v78[v634 + (2 -1) ]);v72=v72 + 1 + 0 ;v631=9 -4 ;end if ((4712==4712) and (v631==(3 -1))) then v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v634=v80[1 + 1 ];v78[v634]=v78[v634]();v72=v72 + (723 -(478 + 244)) ;v631=520 -(440 + 77) ;end if ((4 + 3)==v631) then do return v78[v80[7 -5 ]];end v72=v72 + ((895 + 662) -(655 + 901)) ;v80=v68[v72];do return;end break;end if ((3335>=2992) and (v631==(2 + 4))) then v632=v78[v633];for v976=v633 + 1 ,v80[4 + (0 -0) ] do v632=v632   .. v78[v976] ;end v78[v80[2 + 0 ]]=v632;v72=v72 + 1 ;v80=v68[v72];v631=28 -21 ;end if ((1448 -(695 + 750))==v631) then v80=v68[v72];v78[v80[(3 + 3) -(3 + 1) ]]=v60[v80[(1429 -(85 + 1341)) -(0 -0) ]];v72=v72 + (3 -(5 -3)) ;v80=v68[v72];v78[v80[353 -(285 + 66) ]]=v78[v80[(378 -(45 + 327)) -3 ]] -v78[v80[1314 -(682 + 628) ]] ;v631=1 + 3 ;end if (v631==(1 -0)) then v80=v68[v72];v78[v80[301 -(176 + 123) ]]=v78[v80[2 + 1 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[271 -(239 + 30) ]]=v61[v80[(503 -(444 + 58)) + 2 ]];v631=2 + 0 ;end if (v631==(0 -(0 + 0))) then v632=nil;v633=nil;v634=nil;v78[v80[5 -(1 + 2) ]]=v61[v80[318 -(306 + 9) ]];v72=v72 + 1 ;v631=3 -2 ;end if (v631==5) then v80=v68[v72];v78[v80[1 + 1 ]]=v80[2 + 1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v633=v80[8 -5 ];v631=1381 -(1140 + 235) ;end end else local v635;local v636;v78[v80[2 + 0 ]]=v78[v80[3 + 0 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[54 -(17 + 16 + (54 -35)) ]]=v61[v80[2 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v636=v80[5 -3 ];v635=v78[v80[2 + 1 ]];v78[v636 + ((1733 -(64 + 1668)) -0) ]=v635;v78[v636]=v635[v80[4 + 0 ]];v72=v72 + (690 -(586 + 103)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[9 -6 ];v72=v72 + (1489 -((3282 -(1227 + 746)) + 179)) ;v80=v68[v72];v636=v80[2];v78[v636]=v78[v636](v13(v78,v636 + (1 -(0 -0)) ,v80[5 -2 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v636=v80[2];v635=v78[v80[7 -4 ]];v78[v636 + (495 -(415 + 79)) ]=v635;v78[v636]=v635[v80[4 + 0 ]];v72=v72 + (1 -0) ;v80=v68[v72];v636=v80[3 -1 ];v78[v636]=v78[v636](v78[v636 + 1 ]);v72=v72 + (610 -(8 + 287 + 314)) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1965 -(1300 + 662) ]];v72=v72 + (3 -2) ;v80=v68[v72];v636=v80[1757 -(1178 + 577) ];v78[v636]=v78[v636]();v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -(494 -(142 + 349)) ]]=v61[v80[1408 -(851 + 554) ]];end elseif ((1482>=1460) and (v81<=69)) then if (v81>(61 + 7)) then do return;end else local v402;local v403;local v404;local v405;local v406;local v407;local v408,v409;local v410;v410=v80[5 -3 ];v408,v409=v71(v78[v410](v13(v78,v410 + ((1 + 0) -0) ,v80[3 -0 ])));v73=(v409 + v410) -(303 -(58 + 57 + 187)) ;v407=0;for v447=v410,v73 do v407=v407 + 1 + 0 ;v78[v447]=v408[v407];end v72=v72 + 1 ;v80=v68[v72];v410=v80[2 + 0 ];v78[v410]=v78[v410](v13(v78,v410 + (3 -2) ,v73));v72=v72 + (1162 -(160 + 1001)) ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]();v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]=v61[v80[361 -(237 + 121) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[899 -(525 + 372) ]]=v80[3];v72=v72 + (1 -0) ;v80=v68[v72];v410=v80[6 -4 ];v78[v410](v78[v410 + (143 -(96 + 46)) ]);v72=v72 + (778 -(643 + 134)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]();v72=v72 + (2 -1) ;v80=v68[v72];v410=v80[7 -5 ];v406={};for v450=1 + 0 , #v77 do v405=v77[v450];for v658=0 -0 , #v405 do v404=v405[v658];v403=v404[1 -0 ];v402=v404[(1963 -1242) -(316 + 403) ];if ((v403==v78) and (v402>=v410)) then v406[v402]=v403[v402];v404[1]=v406;end end end v72=v72 + 1 + 0 ;v80=v68[v72];do return;end end elseif (v81<=70) then local v423=v80[5 -3 ];local v424={};for v452=1 + 0 , #v77 do local v453=v77[v452];for v662=0 -0 , #v453 do local v663=0 + (1864 -(1710 + 154)) ;local v664;local v665;local v666;while true do if (v663==(0 + 0)) then v664=v453[v662];v665=v664[(321 -(200 + 118)) -2 ];v663=4 -(2 + 1) ;end if (v663==(1 -0)) then v666=v664[1 + (1 -0) ];if (((v665==v78) and (v666>=v423)) or (171>=4691)) then local v985=0 -0 ;while true do if (v985==(0 + 0)) then v424[v666]=v665[v666];v664[2 -1 ]=v424;break;end end end break;end end end end elseif (v81==(88 -(12 + 5))) then local v667=v69[v80[11 -(11 -3) ]];local v668;local v669={};v668=v10({},{__index=function(v884,v885) local v886=v669[v885];return v886[1 -0 ][v886[3 -1 ]];end,__newindex=function(v887,v888,v889) local v890=0 + 0 ;local v891;while true do if ((v890==(0 -0)) or (2173>4840)) then v891=v669[v888];v891[1 + 0 ][v891[2]]=v889;break;end end end});for v892=1974 -(1656 + 317) ,v80[4 + 0 + 0 ] do local v893=0 + 0 ;local v894;while true do if (v893==(0 -0)) then v72=v72 + ((3 + 1) -3) ;v894=v68[v72];v893=355 -(5 + 56 + 293) ;end if ((v893==(4 -3)) or (3884<1346)) then if (v894[1272 -(266 + 1005) ]==(6 + 3)) then v669[v892-(3 -2) ]={v78,v894[5 -2 ]};else v669[v892-(1 -0) ]={v60,v894[7 -4 ]};end v77[ #v77 + (3 -2) ]=v669;break;end end end v78[v80[2]]=v29(v667,v668,v61);else local v671=388 -(212 + 28 + 148) ;local v672;local v673;while true do if (v671==(913 -(250 + 655))) then v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[5 -2 ]][v80[4]];break;end if ((3360==3360) and ((1 -0)==v671)) then v80=v68[v72];v673=v80[1958 -(1869 + 87) ];v672=v78[v80[10 -(16 -9) ]];v78[v673 + (1902 -(484 + 1417)) ]=v672;v671=4 -2 ;end if (v671==(6 -2)) then v72=v72 + (774 -(48 + 725)) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[7 -4 ];v72=v72 + 1 + 0 + 0 ;v671=13 -8 ;end if (v671==7) then v72=v72 + 1 + (1664 -(674 + 990)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]][v80[857 -(152 + 701) ]];v72=v72 + (1312 -(430 + 881)) ;v671=4 + 4 ;end if ((901 -(557 + 338))==v671) then v78[v80[1 + 1 ]]=v78[v80[(3 + 5) -5 ]][v80[13 -9 ]];v72=v72 + ((1 + 1) -1) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[804 -(499 + 302) ]][v80[870 -(39 + 827) ]];v671=19 -12 ;end if (v671==2) then v78[v673]=v672[v80[8 -4 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[7 -5 ]]=v80[3 -0 ];v671=3;end if (v671==(0 + 0)) then v672=nil;v673=nil;v78[v80[2 -0 ]]=v61[v80[3]];v72=v72 + (2 -1) ;v671=1;end if ((1082<=2816) and (v671==3)) then v72=v72 + 1 ;v80=v68[v72];v673=v80[1 + 1 ];v78[v673]=v78[v673](v13(v78,v673 + (1 -0) ,v80[3]));v671=108 -(103 + 1) ;end if ((v671==5) or (3830>=4328)) then v80=v68[v72];v78[v80[556 -(475 + 79) ]]=v61[v80[(1061 -(507 + 548)) -3 ]];v72=v72 + (3 -2) ;v80=v68[v72];v671=1 + 5 ;end end end v72=v72 + (838 -(289 + 548)) + (1818 -(821 + 997)) ;break;end if (v91==(1503 -(1395 + 108))) then v80=v68[v72];v81=v80[2 -1 ];v91=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
